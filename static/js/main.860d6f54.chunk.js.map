{"version":3,"sources":["ChordButtons.module.scss","Sustain.module.scss","ChordView.module.scss","Sliders.module.scss","App.module.scss","Tuning.module.scss","AudioFontPlayer.ts","chords.ts","ChordButtonLine.tsx","ChordButtons.tsx","ChordView.tsx","useDebounce.ts","Sliders.tsx","Sustain.tsx","Tuning.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","soundFont","window","_tone_0411_FluidR3_GM_sf2_file","AudioFontPlayer","constructor","player","audioContext","envelopes","volume","playbackRate","duration","AudioContextFunc","AudioContext","webkitAudioContext","this","WebAudioFontPlayer","loader","decodeAfterLoading","queueNote","note","zone","findZone","baseDetune","originalPitch","coarseTune","fineTune","Math","pow","envelope","queueWaveTable","destination","audioBufferSourceNode","cancelScheduledValues","setValueAtTime","push","playChord","pitches","stop","forEach","pitch","pop","cancel","length","setFreq","freq","map","e","setVolume","setDuration","NOTES","NOTES_CHROMATIC_ORDER","NOTES_FIFTHS_ORDER","CHORDTYPES","getChordContext","TUNING","MAX_POS","CHORD_DB","createNotesArr","notes","arr","n","sort","a","b","threeNoteChordItem","base","type","fourNoteChordItem","fourth","i","createDb","getChords","p","filter","item","isEqual","r","getDifficulty","reduce","prev","curr","VALID_CHORDS","j","k","chord","Array","isArray","init","getChordPitches","getChordPositions","positionsToPitches","positions","t","getAlternativeNames","c","ChordButtonLine","React","memo","props","activeButton","pendingType","layout","typeIndex","onClick","order","isButtonActive","noteIndex","className","styles","pending","style","background","pos","CHROMATIC_BG_WHITE","active","CHROMATIC_KEYMAP","CHROMATIC_KEYMAP_CODES","FIFTHS_KEYMAP","FIFTHS_KEYMAP_CODES_MAJOR","FIFTHS_KEYMAP_CODES_MINOR","FIFTHS_KEYMAP_CODES_SEVENTH","ChordButtons","activeNote","activeType","setLayout","onStop","keymap","chordbuttons","key","colSpan","name","value","checked","onChange","target","ChordView","tuning","maxPos","isChecked","getNote","baseNote","wrapper","chordview","readOnly","fill","_","names","Fragment","useDebounce","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","setTimeout","clearTimeout","Sliders","onSetVolume","onSetTuning","debouncedVolume","setTuning","debouncedTuning","sliders","tuner","step","min","max","Number","Sustain","onSetSustain","sustain","setSustain","debouncedSustain","left","right","disabled","Tuning","onSetMaxNote","tuningOptions","index","label","maxPosOptions","renderTuningSelect","newValue","clone","getTuningArray","currentTarget","option","defaultTuning","localStorage","getItem","App","useRef","ready","setReady","current","chordContext","setChordContext","lastChordNote","setLastChordNote","lastChordType","setLastChordType","keyUpEvent","setKeyUpEvent","pendingChordType","setPendingChordType","render","getStorageKey","useCallback","join","storageKey","getPitches","stored","parsed","JSON","parse","every","isInteger","err","indexOf","onChordClick","setItem","stringify","Date","now","onKeyDownChromatic","keyCode","includes","typeKeymap","onKeyDownFifths","listener","ctrlKey","shiftKey","altKey","repeat","code","preventDefault","stopPropagation","document","addEventListener","removeEventListener","onSetFineTuning","val","toString","onSetMaxPos","app","chords","renderChord","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.860d6f54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordbuttons\":\"ChordButtons_chordbuttons__1fCK-\",\"pending\":\"ChordButtons_pending__2QeOF\",\"active\":\"ChordButtons_active__1aWxQ\",\"stop\":\"ChordButtons_stop__3dkpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sustain\":\"Sustain_sustain__yapZz\",\"left\":\"Sustain_left__F1938\",\"right\":\"Sustain_right__3zI1A\",\"tuner\":\"Sustain_tuner__3wHn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordview\":\"ChordView_chordview__1UQS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliders\":\"Sliders_sliders__lzxZi\",\"tuner\":\"Sliders_tuner__vf4HX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"chords\":\"App_chords__7aOCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tuning\":\"Tuning_tuning__36ecz\"};","import WebAudioFontPlayer from 'webaudiofont';\n\nconst soundFont = (window as any)._tone_0411_FluidR3_GM_sf2_file\n\nexport class AudioFontPlayer {\n  private player;\n  private audioContext;\n  private envelopes = [];\n  private volume = 0.5;\n  private playbackRate = 1.0;\n  private duration = 0.3;\n\n  constructor () {\n    const AudioContextFunc = window.AudioContext || (window as any).webkitAudioContext;\n    this.audioContext = new AudioContextFunc();\n    this.player = new WebAudioFontPlayer();\n    this.player.loader.decodeAfterLoading(this.audioContext, '_tone_0411_FluidR3_GM_sf2_file');\n    // sustain\n    // for (let i = 0; i < soundFont.zones.length; i++){\n    //   soundFont.zones[i].ahdsr = false;\n    // }\n  }\n\n  queueNote(note: number, duration: number) {\n    const zone = this.player.findZone(this.audioContext, soundFont, note);\n    const baseDetune = zone.originalPitch - 100.0 * zone.coarseTune - zone.fineTune;\n\t\tconst playbackRate = this.playbackRate * Math.pow(2, (100.0 * note - baseDetune) / 1200.0);\n    const envelope = this.player.queueWaveTable(this.audioContext, this.audioContext.destination, soundFont, 0, note, duration, this.volume);\n    envelope.audioBufferSourceNode.playbackRate.cancelScheduledValues(0);\n    envelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, 0);\n    this.envelopes.push(envelope);\n  }\n\n  playChord(pitches: number[]) {\n    this.stop();\n    pitches?.forEach(pitch => this.queueNote(pitch, this.duration));\n  }\n\n  stop() {\n    while (true) {\n      const envelope = this.envelopes.pop();\n      if (!envelope) break;\n      envelope.cancel();\n    }\n  }\n\n  get playing() {\n    return this.envelopes.length > 0;\n  }\n\n  setFreq(freq: number) {\n    this.playbackRate = freq / 440;\n    const pitches = this.envelopes.map(e => e.pitch);\n    this.playChord(pitches);\n  }\n\n  setVolume(volume: number) {\n    this.volume = volume;\n    // it doesn't accept 0\n    if (this.volume === 0) {\n      this.volume = 0.0001;\n    }\n    const pitches = this.envelopes.map(e => e.pitch);\n    this.playChord(pitches);\n  }\n\n  setDuration(duration: number) {\n    this.duration = duration;\n  }\n}\n","import { isEqual } from 'lodash';\n\nexport const NOTES = ['C', 'C♯', 'D', 'E♭', 'E', 'F', 'F♯', 'G', 'A♭', 'A', 'B', 'H'];\nexport const NOTES_CHROMATIC_ORDER = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nexport const NOTES_FIFTHS_ORDER = [6, 1, 8, 3, 10, 5, 0, 7, 2, 9, 4, 11];\nexport const CHORDTYPES = ['', 'm', '7', 'dim', 'dim7', '5', '6', 'm7', 'maj7', 'sus2', 'sus4', 'm6', 'aug'];\n\nexport function getChordContext({ TUNING, MAX_POS }) {\n  const CHORD_DB = [];\n  \n  const createNotesArr = (notes: number[]) => {\n    const arr = notes.map(n => n % 12);\n    arr.sort((a, b) => a - b);\n    return arr;\n  };\n  \n  const threeNoteChordItem = (base: number, type: number, notes: number[]) => {\n    return { base, type, notes: createNotesArr(notes) };\n  }\n  \n  const fourNoteChordItem = (base: number, type: number, notes: number[], fourth: number) => {\n    return [\n      threeNoteChordItem(base, type, [notes[0], notes[1], fourth]),\n      threeNoteChordItem(base, type, [notes[0], fourth, notes[2]]),\n      threeNoteChordItem(base, type, [fourth, notes[1], notes[2]]),\n    ];\n  }\n  \n  const createDb = () => {\n    for (let i = 0; i < 12; i++) {\n      CHORD_DB.push(\n        threeNoteChordItem(i, 0, [i, i + 4, i + 4 + 3]), // major\n        threeNoteChordItem(i, 1, [i, i + 3, i + 3 + 4]), // minor\n        ...fourNoteChordItem(i, 2, [i, i + 4, i + 4 + 3], i + 4 + 3 + 3), // 7\n        threeNoteChordItem(i, 3, [i, i + 3, i + 6]), // dim\n        ...fourNoteChordItem(i, 4, [i, i + 3, i + 6], i + 3 + 3 + 3), // dim7\n        threeNoteChordItem(i, 5, [i, i, i + 3 + 4]), // 5\n        threeNoteChordItem(i, 5, [i, i + 3 + 4, i + 3 + 4]), // 5\n        ...fourNoteChordItem(i, 6, [i, i + 4, i + 4 + 3], i + 4 + 3 + 2), // 6\n        ...fourNoteChordItem(i, 7, [i, i + 3, i + 3 + 4], i + 4 + 3 + 3), // m7\n        ...fourNoteChordItem(i, 8, [i, i + 4, i + 4 + 3], i + 4 + 3 + 4), // maj7\n        threeNoteChordItem(i, 9, [i, i + 2, i + 4 + 3]), // sus2\n        threeNoteChordItem(i, 10, [i, i + 5, i + 4 + 3]), // sus4\n        ...fourNoteChordItem(i, 11, [i, i + 3, i + 3 + 4], i + 4 + 3 + 2), // m6\n        threeNoteChordItem(i, 12, [i, i + 4, i + 4 + 4]), // aug\n      );\n    }\n  };\n  createDb();\n  \n  // note is zero indexed\n  const pitchToNote = (pitch: number) => {\n    return pitch % 12;\n  }\n  \n  const getChords = (pitches: number[]) => {\n    const notes = pitches.map(p => pitchToNote(p)).sort((a, b) => a - b);\n    const res = CHORD_DB.filter(item => isEqual(item.notes, notes));\n    return res.map(r => ({ base: r.base, type: r.type }));\n  };\n  \n  const getDifficulty = (pitches: number[]) => {\n    const positions = pitches.map((pitch, i) => pitch - TUNING[i]);\n    const score = positions.reduce((prev, curr) => curr === 0 ? prev + 2 : prev + curr, 0);\n    return score;\n  };\n  \n  // VALID_CHORDS[note][type] = [pitches];\n  const VALID_CHORDS = [];\n  \n  function init() {\n    for (let i = 0; i < MAX_POS; i++) {\n      for (let j = 0; j < MAX_POS; j++) {\n        for (let k = 0; k < MAX_POS; k++) {\n          const pitches = [TUNING[0] + i, TUNING[1] + j, TUNING[2] + k];\n          const chords = getChords(pitches);\n          chords.forEach(chord => {\n            if (!Array.isArray(VALID_CHORDS[chord.base])) {\n              VALID_CHORDS[chord.base] = [];\n            }\n            if (!Array.isArray(VALID_CHORDS[chord.base][chord.type])) {\n              VALID_CHORDS[chord.base][chord.type] = [];\n            }\n            VALID_CHORDS[chord.base][chord.type].push(pitches);\n          });\n        }\n      }\n    }\n  \n    // order by complexity\n    for (let i = 0; i < VALID_CHORDS.length; i++) {\n      if (!VALID_CHORDS[i]) continue;\n      for (let j = 0; j < VALID_CHORDS[i].length; j++) {\n        const pitches = VALID_CHORDS[i][j] ?? [];\n        pitches.sort((a, b) => getDifficulty(a) - getDifficulty(b));\n      }\n    }\n  }\n  \n  init();\n\n  return {\n    getChordPitches(note: number, type: number) {\n      return VALID_CHORDS[note]?.[type];\n    },\n    \n    getChordPositions(note: number, type: number) {\n      return VALID_CHORDS[note]?.[type]?.map(pitches => pitches.map((pitch, i) => pitch - TUNING[i]));\n    },\n    \n    positionsToPitches(positions: number[]) {\n      return TUNING.map((t, i) => positions[i] + t);\n    },\n    \n    getAlternativeNames(positions: number[]) {\n      const pitches = positions.map((p, i) => TUNING[i] + p);\n      const chords = getChords(pitches).sort((a, b) => a.type - b.type);\n      return chords.map(c => `${NOTES[c.base]}${CHORDTYPES[c.type]}`);\n    },\n\n    TUNING,\n    MAX_POS,\n  };\n}\n","import React from 'react';\nimport { CHORDTYPES, NOTES, NOTES_CHROMATIC_ORDER, NOTES_FIFTHS_ORDER } from './chords';\nimport styles from './ChordButtons.module.scss';\nimport { CHROMATIC_BG_WHITE } from './ChordButtons';\n\ninterface ChordButtonLineProps {\n  activeButton: number;\n  pendingType: number;\n  layout: 'chromatic' | 'fifths';\n  onClick: (note: number, type: number) => void;\n  typeIndex: number;\n}\n\nexport const ChordButtonLine: React.FC<ChordButtonLineProps> = React.memo((props) => {\n  const { activeButton, pendingType, layout, typeIndex, onClick } = props;\n\n  const getButtonBgColor = (pos: number) => {\n    if (CHROMATIC_BG_WHITE[pos] === 1) return '#eee';\n    return '#bbb';\n  };\n\n  const order = layout === 'chromatic' ? NOTES_CHROMATIC_ORDER : NOTES_FIFTHS_ORDER;\n  const isButtonActive = (noteIndex: number) => activeButton === noteIndex;\n\n  return (\n    <tr className={pendingType === typeIndex ? styles.pending : ''} key={typeIndex}>\n      <td>{typeIndex < 9 && layout === 'chromatic' ? typeIndex + 1 : ''}</td>\n      {order.map((noteIndex) => (\n        <td key={noteIndex + typeIndex}>\n          <button\n            style={{ ...(layout === 'chromatic' && !isButtonActive(noteIndex) ? { background: getButtonBgColor(noteIndex) }: {})}}\n            className={isButtonActive(noteIndex) ? styles.active : ''}\n            onClick={() => onClick(noteIndex, typeIndex)}\n          >\n            {NOTES[noteIndex]}{CHORDTYPES[typeIndex]}\n          </button>\n        </td>\n      ))}\n    </tr>\n  );\n});\n","import React from 'react';\nimport { CHORDTYPES } from './chords';\nimport styles from './ChordButtons.module.scss';\nimport { ChordButtonLine } from './ChordButtonLine';\n\ninterface ChordButtonsProps {\n  activeNote: number;\n  activeType: number;\n  pendingType: number;\n  layout: 'chromatic' | 'fifths';\n  setLayout: (layout: 'chromatic' | 'fifths') => void;\n  onClick: (note: number, type: number) => void;\n  onStop: () => void;\n}\n\nexport const CHROMATIC_KEYMAP = ['z', 's', 'x', 'd', 'c', 'v', 'g', 'b', 'h', 'n', 'j', 'm'];\nexport const CHROMATIC_KEYMAP_CODES = ['KeyZ', 'KeyS', 'KeyX', 'KeyD', 'KeyC', 'KeyV', 'KeyG', 'KeyB', 'KeyH', 'KeyN', 'KeyJ', 'KeyM'];\nexport const CHROMATIC_BG_WHITE = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1];\nexport const FIFTHS_KEYMAP = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '='];\nexport const FIFTHS_KEYMAP_CODES_MAJOR = ['Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal'];\nexport const FIFTHS_KEYMAP_CODES_MINOR = ['KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight'];\nexport const FIFTHS_KEYMAP_CODES_SEVENTH = ['KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Backslash'];\n\nexport const ChordButtons: React.FC<ChordButtonsProps> = (props) => {\n  const { activeNote, activeType, pendingType, layout, setLayout, onClick, onStop } = props;\n\n  const keymap = layout === 'chromatic' ? CHROMATIC_KEYMAP : FIFTHS_KEYMAP;\n\n  return (\n    <div className={styles.chordbuttons}>\n      <table>\n        <thead>\n          <tr>\n            <td><strong>Key</strong></td>\n            {keymap.map(key => <td key={key}>{key}</td>)}\n          </tr>\n        </thead>\n        <tbody>\n          {CHORDTYPES.map((type, typeIndex) => (\n            <ChordButtonLine\n              key={type}\n              layout={layout}\n              typeIndex={typeIndex}\n              activeButton={activeType !== typeIndex ? null : activeNote}\n              pendingType={pendingType}\n              onClick={onClick}\n            />\n          ))}\n          <tr>\n            <td>Space</td>\n            <td colSpan={12}>\n              <button className={styles.stop} onClick={onStop}>Stop</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"layout\"\n          value=\"chromatic\"\n          checked={layout === 'chromatic'}\n          onChange={(e) => setLayout(e.target.value as any)}\n        />\n        Chromatic\n      </label>\n      &nbsp;&nbsp;&nbsp;&nbsp;\n      <label>\n        <input\n          type=\"radio\"\n          name=\"layout\"\n          value=\"fifths\"\n          checked={layout === 'fifths'}\n          onChange={(e) => setLayout(e.target.value as any)}\n        />\n        Circle of fifths\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NOTES } from './chords';\nimport styles from './ChordView.module.scss';\n\ninterface ChordViewProps {\n  tuning: [number, number, number];\n  maxPos: number;\n  isChecked: boolean;\n  positions: [number, number, number];\n  onClick: (positions: number[]) => void;\n  getAlternativeNames: (positions: number[]) => string[];\n}\n\nexport const ChordView: React.FC<ChordViewProps> = (props) => {\n  const { tuning, maxPos, isChecked, positions, onClick, getAlternativeNames } = props;\n\n  const getNote = (baseNote: number, pos: number) => {\n    const index = (baseNote + pos) % 12;\n    return NOTES[index];\n  }\n\n  return (\n    <div className={styles.wrapper} onClick={() => onClick(positions)}>\n      <table className={styles.chordview}>\n        <thead>\n          <tr>\n            <th colSpan={3}>\n              <input type=\"checkbox\" checked={isChecked} readOnly/>\n            </th>\n          </tr>\n          <tr>\n            <th>{getNote(tuning[0], positions[0])}</th>\n            <th>{getNote(tuning[1], positions[1])}</th>\n            <th>{getNote(tuning[2], positions[2])}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {new Array(maxPos - 1).fill(0).map((_, i) => (\n            <tr key={i}>\n              <td>{positions[0] === i + 1 ? '●' : ''}</td>\n              <td>{positions[1] === i + 1 ? '●' : ''}</td>\n              <td>{positions[2] === i + 1 ? '●' : ''}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className={styles.names}>\n        {getAlternativeNames(positions).map(name =>\n          <React.Fragment key={name}>\n            {name}\n            <br />\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n};\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n","import React, { useEffect, useState } from 'react';\nimport styles from './Sliders.module.scss';\nimport { useDebounce } from './useDebounce';\n\ninterface SlidersProps {\n  onSetVolume: (volume: number) => void;\n  onSetTuning: (tuning: number) => void;\n}\n\nexport const Sliders: React.FC<SlidersProps> = React.memo((props) => {\n  const { onSetVolume, onSetTuning } = props;\n  const [volume, setVolume] = useState(0.5);\n  const debouncedVolume = useDebounce(volume, 50);\n  const [tuning, setTuning] = useState(440);\n  const debouncedTuning = useDebounce(tuning, 25);\n\n  useEffect(() => {\n    onSetVolume(debouncedVolume);\n  }, [onSetVolume, debouncedVolume]);\n\n  useEffect(() => {\n    onSetTuning(debouncedTuning);\n  }, [onSetTuning, debouncedTuning]);\n\n  return (\n    <div className={styles.sliders}>\n      <label>\n        Fine tuning\n        <br />\n        <input\n          className={styles.tuner}\n          type=\"range\"\n          step=\"0.1\"\n          min=\"400\"\n          max=\"500\"\n          value={tuning}\n          onChange={(e) => setTuning(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Volume\n        <br />\n        <input\n          className={styles.tuner}\n          type=\"range\"\n          step=\"0.02\"\n          min=\"0\"\n          max=\"1\"\n          value={volume}\n          onChange={(e) => setVolume(Number(e.target.value))}\n        />\n      </label>\n      {/* <br />\n      {tuning.toFixed(1)}\n      <br /> */}\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport styles from './Sustain.module.scss';\nimport { useDebounce } from './useDebounce';\n\ninterface SustainProps {\n  onSetSustain: (sustain: number | null) => void;\n}\n\nexport const Sustain: React.FC<SustainProps> = React.memo((props) => {\n  const { onSetSustain } = props;\n  const [sustain, setSustain] = useState(0.3);\n  const debouncedSustain = useDebounce(sustain, 25);\n\n  useEffect(() => {\n    onSetSustain(debouncedSustain);\n  }, [onSetSustain, debouncedSustain]);\n\n  return (\n    <div className={styles.sustain}>\n      <div className={styles.left}>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"sustain\"\n            value=\"sustain\"\n            checked={sustain === null}\n            onChange={(e) => setSustain(null)}\n          />\n          Sustain\n        </label>\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <label>\n          <input\n            type=\"radio\"\n            name=\"sustain\"\n            value=\"release\"\n            checked={sustain !== null}\n            onChange={(e) => setSustain(0.3)}\n          />\n          Auto release\n        </label>\n      </div>\n      <div className={styles.right}>\n        <label>\n          Auto release timing\n          <br />\n          <input\n            className={styles.tuner}\n            type=\"range\"\n            step=\"0.02\"\n            min=\"0\"\n            max=\"1\"\n            disabled={sustain === null}\n            value={sustain}\n            onChange={(e) => setSustain(Number(e.target.value))}\n          />\n        </label>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport { NOTES } from './chords';\nimport styles from './Tuning.module.scss';\n\ninterface TuningProps {\n  tuning: number[];\n  maxPos: number;\n  onSetTuning: (tuning: number[]) => void;\n  onSetMaxNote: (number) => void;\n}\n\nexport const Tuning: React.FC<TuningProps> = React.memo((props) => {\n  const { tuning, maxPos, onSetTuning, onSetMaxNote } = props;\n\n  const tuningOptions = [\n    ...NOTES.map((note, index) => ({ label: note, value: 48 + index })),\n    ...NOTES.map((note, index) => ({ label: `${note}'`, value: 60 + index })),\n  ];\n\n  const maxPosOptions = [\n    ...Array(10).fill(0).map((_, index) => ({ label: 7 + index, value: 7 + index })),\n  ];\n\n  const getTuningArray = (pos: number, newValue: number) => {\n    const clone = [...tuning];\n    clone[pos] = newValue;\n    return clone;\n  }\n\n  const renderTuningSelect = (pos: number) => {\n    return (\n      <select value={tuning[pos]} onChange={(e) => onSetTuning(getTuningArray(pos, Number(e.currentTarget.value)))}>\n        {tuningOptions.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  return (\n    <div className={styles.tuning}>\n      <div>\n        <label>Tuning:</label>\n        <span>\n          {renderTuningSelect(0)}\n          {renderTuningSelect(1)}\n          {renderTuningSelect(2)}\n          <button onClick={() => onSetTuning([55, 62, 57])}>Reset</button>\n        </span>\n      </div>\n      <div>\n        <label>Max position:</label>\n        <select value={maxPos} onChange={(e) => onSetMaxNote(Number(e.currentTarget.value))}>\n          {maxPosOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n});\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styles from './App.module.scss';\nimport { AudioFontPlayer } from './AudioFontPlayer';\nimport { ChordButtons, CHROMATIC_KEYMAP_CODES, FIFTHS_KEYMAP_CODES_SEVENTH, FIFTHS_KEYMAP_CODES_MINOR, FIFTHS_KEYMAP_CODES_MAJOR } from './ChordButtons';\nimport { CHORDTYPES, getChordContext, NOTES, NOTES_FIFTHS_ORDER } from './chords';\nimport { ChordView } from './ChordView';\nimport { Sliders } from './Sliders';\nimport { Sustain } from './Sustain';\nimport { Tuning } from './Tuning';\n\nconst defaultTuning = [\n  Number(localStorage.getItem(`viola-tuning-1`) ?? '55'),\n  Number(localStorage.getItem(`viola-tuning-2`) ?? '62'),\n  Number(localStorage.getItem(`viola-tuning-3`) ?? '57'),\n];\n\nconst maxPos = Number(localStorage.getItem(`viola-max-pos`) ?? '8');\n\nexport const App: React.FC = () => {\n  const player = useRef(null);\n  const [ready, setReady] = useState(false);\n\n  useEffect(() => {\n    player.current = new AudioFontPlayer();\n    setReady(true);\n  }, []);\n\n  const [chordContext, setChordContext] = useState(getChordContext({ TUNING: defaultTuning, MAX_POS: maxPos }));\n  const [lastChordNote, setLastChordNote] = useState(0);\n  const [lastChordType, setLastChordType] = useState(0);\n  const [keyUpEvent, setKeyUpEvent] = useState(true);\n  const [pendingChordType, setPendingChordType] = useState<number>(null);\n  const [layout, setLayout] = useState<'chromatic' | 'fifths'>('chromatic');\n  const [, render] = useState(0);\n\n\n  const getStorageKey = useCallback((note: string, type: string) => `viola-${chordContext.TUNING.join('-')}-${note}${type}`, [chordContext]);\n  const storageKey = getStorageKey(NOTES[lastChordNote], CHORDTYPES[lastChordType]);\n\n  const getPitches = useCallback((note: string, type: string) => {\n    const storageKey = getStorageKey(note, type);\n    const stored = localStorage.getItem(storageKey);\n    if (stored) {\n      try {\n        const parsed = JSON.parse(stored);\n        if (Array.isArray(parsed) && parsed.length === 3 && parsed.every(p => Number.isInteger(p))) {\n          return chordContext.positionsToPitches(parsed);\n        }\n      } catch (err) {}\n    }\n\n    const pitches = chordContext.getChordPitches(\n      NOTES.indexOf(note),\n      CHORDTYPES.indexOf(type)\n    );\n\n    return pitches?.[0];\n  }, [getStorageKey, chordContext]);\n\n  const playChord = useCallback((note: number, type: number) => {\n    const pitches = getPitches(NOTES[note], CHORDTYPES[type]);\n\n    if (pitches) {\n      player.current.playChord(pitches);\n    }\n\n    setLastChordNote(note);\n    setLastChordType(type);\n    setPendingChordType(null);\n  }, [getPitches])\n\n  const positions = chordContext.getChordPositions(lastChordNote, lastChordType) ?? [];\n\n  const onChordClick = (positions: number[]) => {\n    const pitches = chordContext.positionsToPitches(positions);\n    if (pitches) {\n      player.current.playChord(pitches);\n      localStorage.setItem(storageKey, JSON.stringify(positions));\n    }\n    render(Date.now()); // needed for the checkbox above chord icons\n  };\n\n  const onStop = useCallback(() => {\n    player.current.stop();\n  }, []);\n\n  const onKeyDownChromatic = useCallback((key: string, keyCode: string) => {\n    if (CHROMATIC_KEYMAP_CODES.includes(keyCode)) {\n      playChord(CHROMATIC_KEYMAP_CODES.indexOf(keyCode) % 12, pendingChordType ?? lastChordType);\n      setPendingChordType(null);\n      return true;\n    }\n\n    const typeKeymap = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    if (typeKeymap.includes(key)) {\n      setPendingChordType(typeKeymap.indexOf(key));\n      return true;\n    }\n\n    if (key === ' ') {\n      onStop();\n      return true;\n    }\n\n    return false;\n  }, [onStop, pendingChordType, lastChordType, playChord]);\n\n  const onKeyDownFifths = useCallback((key: string, keyCode: string) => {\n    if (FIFTHS_KEYMAP_CODES_MAJOR.includes(keyCode)) {\n      playChord(NOTES_FIFTHS_ORDER[FIFTHS_KEYMAP_CODES_MAJOR.indexOf(keyCode) % 12], 0);\n      setPendingChordType(null);\n      return true;\n    }\n\n    if (FIFTHS_KEYMAP_CODES_MINOR.includes(keyCode)) {\n      playChord(NOTES_FIFTHS_ORDER[FIFTHS_KEYMAP_CODES_MINOR.indexOf(keyCode) % 12], 1);\n      setPendingChordType(null);\n      return true;\n    }\n\n    if (FIFTHS_KEYMAP_CODES_SEVENTH.includes(keyCode)) {\n      playChord(NOTES_FIFTHS_ORDER[FIFTHS_KEYMAP_CODES_SEVENTH.indexOf(keyCode) % 12], 2);\n      setPendingChordType(null);\n      return true;\n    }\n\n    if (key === ' ') {\n      onStop();\n      return true;\n    }\n\n    return false;\n  }, [onStop, playChord]);\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.ctrlKey || e.shiftKey || e.altKey) return;\n      if (e.repeat) return;\n      const res = layout === 'chromatic' ? onKeyDownChromatic(e.key, e.code) : onKeyDownFifths(e.key, e.code);\n      if (res) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n    document.addEventListener(\"keydown\", listener);\n    return () => document.removeEventListener(\"keydown\", listener);\n  }, [layout, onKeyDownChromatic, onKeyDownFifths]);\n\n  useEffect(() => {\n    if (!keyUpEvent) return;\n    const listener = (e) => {\n      if (e.ctrlKey || e.shiftKey || e.altKey) return;\n      if (CHROMATIC_KEYMAP_CODES.includes(e.code)\n        || FIFTHS_KEYMAP_CODES_MAJOR.includes(e.code)\n        || FIFTHS_KEYMAP_CODES_MINOR.includes(e.code)\n        || FIFTHS_KEYMAP_CODES_SEVENTH.includes(e.code)){\n        onStop();\n        e.preventDefault();\n        e.stopPropagation();\n        return true;\n      }\n    }\n    document.addEventListener(\"keyup\", listener);\n    return () => document.removeEventListener(\"keyup\", listener);\n  }, [onStop, keyUpEvent]);\n\n  const onSetFineTuning = useCallback((freq: number) => {\n    player.current.setFreq(freq);\n  }, []);\n\n  const onSetSustain = useCallback((duration: number) => {\n    if (duration === null) {\n      player.current.setDuration(999);\n      setKeyUpEvent(true);\n    } else {\n      player.current.setDuration(duration);\n      setKeyUpEvent(false);\n    }\n  }, []);\n\n  const onSetVolume = useCallback((volume: number) => {\n    player.current.setVolume(volume);\n  }, []);\n\n  const onSetTuning = useCallback((TUNING: number[]) => {\n    TUNING.forEach((val, index) => {\n      localStorage.setItem(`viola-tuning-${index + 1}`, val.toString());\n    })\n    setChordContext(getChordContext({ TUNING, MAX_POS: chordContext.MAX_POS }));\n  }, [chordContext.MAX_POS]);\n\n  const onSetMaxPos = useCallback((MAX_POS: number) => {\n    localStorage.setItem('viola-max-pos', MAX_POS.toString());\n    setChordContext(getChordContext({ TUNING: chordContext.TUNING, MAX_POS }))\n  }, [chordContext.TUNING]);\n\n  if (!ready) {\n    return null;\n  }\n\n  const renderChord = (pos: [number, number, number]) => {\n    const key = JSON.stringify(pos);\n    const isChecked = key === localStorage.getItem(storageKey);\n\n    return (\n      <ChordView\n        key={key}\n        positions={pos}\n        tuning={chordContext.TUNING}\n        maxPos={chordContext.MAX_POS}\n        onClick={onChordClick}\n        isChecked={isChecked}\n        getAlternativeNames={chordContext.getAlternativeNames}\n      />\n    );\n  };\n\n  return (\n    <div className={styles.app}>\n      <ChordButtons\n        activeNote={lastChordNote}\n        activeType={lastChordType}\n        pendingType={pendingChordType}\n        onClick={playChord}\n        onStop={onStop}\n        layout={layout}\n        setLayout={setLayout}\n      />\n\n      <Sustain\n        onSetSustain={onSetSustain}\n      />\n\n      <Sliders\n        onSetTuning={onSetFineTuning}\n        onSetVolume={onSetVolume}\n      />\n      \n      <Tuning\n        tuning={chordContext.TUNING}\n        maxPos={chordContext.MAX_POS}\n        onSetTuning={onSetTuning}\n        onSetMaxNote={onSetMaxPos}\n      />\n\n      <div className={styles.chords}>\n        {positions.map(pos => renderChord(pos))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}