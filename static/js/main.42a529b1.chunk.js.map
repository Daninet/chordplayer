{"version":3,"sources":["AudioFontPlayer.ts","chords.ts","ChordView.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.scss","ChordView.module.scss"],"names":["soundFont","window","_tone_0411_FluidR3_GM_sf2_file","AudioFontPlayer","constructor","player","audioContext","envelopes","volume","playbackRate","AudioContextFunc","AudioContext","webkitAudioContext","this","WebAudioFontPlayer","loader","decodeAfterLoading","console","log","queueNote","note","duration","zone","findZone","baseDetune","originalPitch","coarseTune","fineTune","Math","pow","envelope","queueWaveTable","destination","audioBufferSourceNode","cancelScheduledValues","setValueAtTime","push","playChord","pitches","stop","forEach","pitch","pop","cancel","setFreq","freq","map","e","NOTES","CHORDTYPES","TUNING","CHORD_DB","createNotesArr","notes","arr","n","sort","a","b","threeNoteChordItem","base","type","fourNoteChordItem","fourth","i","createDb","getChords","p","filter","item","isEqual","r","getDifficulty","reduce","prev","curr","VALID_CHORDS","positionsToPitches","positions","t","getAlternativeNames","c","j","k","chord","Array","isArray","length","init","ChordView","props","isChecked","onClick","getNote","baseNote","pos","index","className","styles","wrapper","chordview","colSpan","checked","readOnly","fill","_","names","name","App","useRef","useEffect","current","lastChordNote","setLastChordNote","useState","lastChordType","setLastChordType","tuning","setTuning","render","getStorageKey","storageKey","getPitches","stored","localStorage","getItem","parsed","JSON","parse","every","Number","isInteger","err","getChordPitches","indexOf","renderButtons","onChordClick","setItem","stringify","Date","now","app","onKeyDown","noteKeymap","key","includes","typeKeymap","tabIndex","tuner","step","min","max","value","onChange","updateTuning","target","toFixed","chords","renderChord","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.42a529b1.chunk.js","sourcesContent":["import WebAudioFontPlayer from 'webaudiofont';\n\nconst soundFont = (window as any)._tone_0411_FluidR3_GM_sf2_file\n\nexport class AudioFontPlayer {\n  private player;\n  private audioContext;\n  private envelopes = [];\n  private volume = 1;\n  private playbackRate = 1.0;\n\n  constructor () {\n    const AudioContextFunc = window.AudioContext || (window as any).webkitAudioContext;\n    this.audioContext = new AudioContextFunc();\n    this.player = new WebAudioFontPlayer();\n    this.player.loader.decodeAfterLoading(this.audioContext, '_tone_0411_FluidR3_GM_sf2_file');\n    // sustain\n    // for (let i = 0; i < soundFont.zones.length; i++){\n    //   soundFont.zones[i].ahdsr = false;\n    // }\n    console.log(this.player, soundFont);\n  }\n\n  queueNote(note: number, duration: number) {\n    const zone = this.player.findZone(this.audioContext, soundFont, note);\n    const baseDetune = zone.originalPitch - 100.0 * zone.coarseTune - zone.fineTune;\n\t\tconst playbackRate = this.playbackRate * Math.pow(2, (100.0 * note - baseDetune) / 1200.0);\n    const envelope = this.player.queueWaveTable(this.audioContext, this.audioContext.destination, soundFont, 0, note, duration, this.volume);\n    console.log('i', note, playbackRate);\n    envelope.audioBufferSourceNode.playbackRate.cancelScheduledValues(0);\n    envelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, 0);\n    this.envelopes.push(envelope);\n  }\n\n  playChord(pitches: number[]) {\n    this.stop();\n    pitches.forEach(pitch => this.queueNote(pitch, 999));\n  }\n\n  stop() {\n    while (true) {\n      const envelope = this.envelopes.pop();\n      if (!envelope) break;\n      envelope.cancel();\n    }\n  }\n\n  setFreq(freq: number) {\n    this.playbackRate = freq / 440;\n    const pitches = this.envelopes.map(e => e.pitch);\n    this.playChord(pitches);\n  }\n}\n","import { isEqual } from 'lodash';\n\nexport const NOTES = ['C', 'C♯', 'D', 'E♭', 'E', 'F', 'F♯', 'G', 'A♭', 'A', 'B', 'H'];\nexport const CHORDTYPES = ['', 'm', '7', 'dim', '5', '6', 'm7', 'maj7', 'sus2', 'sus4', 'm6', 'aug'];\n\nconst TUNING = [55, 62, 57];\nconst MAX_POS = 8;\n\nconst CHORD_DB = [];\n\nconst createNotesArr = (notes: number[]) => {\n  const arr = notes.map(n => n % 12);\n  arr.sort((a, b) => a - b);\n  return arr;\n};\n\nconst threeNoteChordItem = (base: number, type: number, notes: number[]) => {\n  return { base, type, notes: createNotesArr(notes) };\n}\n\nconst fourNoteChordItem = (base: number, type: number, notes: number[], fourth: number) => {\n  return [\n    threeNoteChordItem(base, type, [notes[0], notes[1], fourth]),\n    threeNoteChordItem(base, type, [notes[0], fourth, notes[2]]),\n    threeNoteChordItem(base, type, [fourth, notes[1], notes[2]]),\n  ];\n}\n\nconst createDb = () => {\n  for (let i = 0; i < 12; i++) {\n    CHORD_DB.push(\n      threeNoteChordItem(i, 0, [i, i + 4, i + 4 + 3]), // major\n      threeNoteChordItem(i, 1, [i, i + 3, i + 3 + 4]), // minor\n      ...fourNoteChordItem(i, 2, [i, i + 4, i + 4 + 3], i + 4 + 3 + 3), // 7\n      threeNoteChordItem(i, 3, [i, i + 3, i + 6]), // dim\n      threeNoteChordItem(i, 4, [i, i, i + 3 + 4]), // 5\n      threeNoteChordItem(i, 4, [i, i + 3 + 4, i + 3 + 4]), // 5\n      ...fourNoteChordItem(i, 5, [i, i + 4, i + 4 + 3], i + 4 + 3 + 2), // 6\n      ...fourNoteChordItem(i, 6, [i, i + 3, i + 3 + 4], i + 4 + 3 + 3), // m7\n      ...fourNoteChordItem(i, 7, [i, i + 4, i + 4 + 3], i + 4 + 3 + 4), // maj7\n      threeNoteChordItem(i, 8, [i, i + 2, i + 4 + 3]), // sus2\n      threeNoteChordItem(i, 9, [i, i + 5, i + 4 + 3]), // sus4\n      ...fourNoteChordItem(i, 10, [i, i + 3, i + 3 + 4], i + 4 + 3 + 2), // m6\n      threeNoteChordItem(i, 11, [i, i + 4, i + 4 + 4]), // aug\n    );\n  }\n};\ncreateDb();\nconsole.log(CHORD_DB);\n\n// note is zero indexed\nconst pitchToNote = (pitch: number) => {\n  return pitch % 12;\n}\n\nconst getChords = (pitches: number[]) => {\n  const notes = pitches.map(p => pitchToNote(p)).sort((a, b) => a - b);\n  const res = CHORD_DB.filter(item => isEqual(item.notes, notes));\n  return res.map(r => ({ base: r.base, type: r.type }));\n};\n\nconst getDifficulty = (pitches: number[]) => {\n  const positions = pitches.map((pitch, i) => pitch - TUNING[i]);\n  const score = positions.reduce((prev, curr) => curr === 0 ? prev + 2 : prev + curr, 0);\n  return score;\n};\n\n// VALID_CHORDS[note][type] = [pitches];\nconst VALID_CHORDS = [];\n\nfunction init() {\n  for (let i = 0; i < MAX_POS; i++) {\n    for (let j = 0; j < MAX_POS; j++) {\n      for (let k = 0; k < MAX_POS; k++) {\n        const pitches = [TUNING[0] + i, TUNING[1] + j, TUNING[2] + k];\n        const chords = getChords(pitches);\n        chords.forEach(chord => {\n          if (!Array.isArray(VALID_CHORDS[chord.base])) {\n            VALID_CHORDS[chord.base] = [];\n          }\n          if (!Array.isArray(VALID_CHORDS[chord.base][chord.type])) {\n            VALID_CHORDS[chord.base][chord.type] = [];\n          }\n          VALID_CHORDS[chord.base][chord.type].push(pitches);\n        });\n      }\n    }\n  }\n\n  // order by complexity\n  for (let i = 0; i < VALID_CHORDS.length; i++) {\n    for (let j = 0; j < VALID_CHORDS[i].length; j++) {\n      const pitches = VALID_CHORDS[i][j];\n      pitches.sort((a, b) => getDifficulty(a) - getDifficulty(b));\n    }\n  }\n}\n\ninit();\n\nexport function getChordPitches(note: number, type: number) {\n  return VALID_CHORDS[note][type];\n}\n\nexport function getChordPositions(note: number, type: number) {\n  return VALID_CHORDS[note][type].map(pitches => pitches.map((pitch, i) => pitch - TUNING[i]));\n}\n\nexport function positionsToPitches(positions: number[]) {\n  return TUNING.map((t, i) => positions[i] + t);\n}\n\nexport function getAlternativeNames(positions: number[]) {\n  const pitches = positions.map((p, i) => TUNING[i] + p);\n  const chords = getChords(pitches).sort((a, b) => a.type - b.type);\n  return chords.map(c => `${NOTES[c.base]}${CHORDTYPES[c.type]}`);\n}\n\nconsole.log('VALID_CHORDS', VALID_CHORDS);\n","import React from 'react';\nimport { getAlternativeNames, NOTES } from './chords';\nimport styles from './ChordView.module.scss';\n\ninterface ChordViewProps {\n  isChecked: boolean;\n  positions: [number, number, number];\n  onClick: (positions: number[]) => void;\n}\n\nexport const ChordView: React.FC<ChordViewProps> = (props) => {\n  const { isChecked, positions, onClick } = props;\n\n  const getNote = (baseNote: number, pos: number) => {\n    const index = (baseNote + pos) % 12;\n    const isHighNote = baseNote + pos >= 7 + 12;\n    return isHighNote ? `${NOTES[index]}'` : NOTES[index];\n  }\n\n  return (\n    <div className={styles.wrapper} onClick={() => onClick(positions)}>\n      <table className={styles.chordview}>\n        <thead>\n          <tr>\n            <th colSpan={3}>\n              <input type=\"checkbox\" checked={isChecked} readOnly/>\n            </th>\n          </tr>\n          <tr>\n            <th>{getNote(7, positions[0])}</th>\n            <th>{getNote(14, positions[1])}</th>\n            <th>{getNote(9, positions[2])}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {new Array(7).fill(0).map((_, i) => (\n            <tr key={i}>\n              <td>{positions[0] === i + 1 ? '●' : ''}</td>\n              <td>{positions[1] === i + 1 ? '●' : ''}</td>\n              <td>{positions[2] === i + 1 ? '●' : ''}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className={styles.names}>\n        {getAlternativeNames(positions).map(name => <>{name}<br /></>)}\n      </div>\n    </div>\n  )\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport styles from './App.module.scss';\nimport { AudioFontPlayer } from './AudioFontPlayer';\nimport { CHORDTYPES, getChordPitches, getChordPositions, NOTES, positionsToPitches } from './chords';\nimport { ChordView } from './ChordView';\n\nexport const App: React.FC = () => {\n  const player = useRef(null);\n  useEffect(() => {\n    player.current = new AudioFontPlayer();\n  }, []);\n\n  const [lastChordNote, setLastChordNote] = useState(0);\n  const [lastChordType, setLastChordType] = useState(0);\n  const [tuning, setTuning] = useState(440);\n  const [, render] = useState(0);\n\n  const getStorageKey = (note: string, type: string) => `viola-${note}${type}`;\n  const storageKey = getStorageKey(NOTES[lastChordNote], CHORDTYPES[lastChordType]);\n\n  const getPitches = (note: string, type: string) => {\n    const storageKey = getStorageKey(note, type);\n    const stored = localStorage.getItem(storageKey);\n    if (stored) {\n      try {\n        const parsed = JSON.parse(stored);\n        if (Array.isArray(parsed) && parsed.length === 3 && parsed.every(p => Number.isInteger(p))) {\n          console.log(parsed, positionsToPitches(parsed));\n          return positionsToPitches(parsed);\n        }\n      } catch (err) {}\n    }\n\n    return getChordPitches(\n      NOTES.indexOf(note),\n      CHORDTYPES.indexOf(type)\n    )[0];\n  };\n\n  const playChord = (note: string, type: string) => {\n    const pitches = getPitches(note, type);\n\n    setLastChordNote(NOTES.indexOf(note));\n    setLastChordType(CHORDTYPES.indexOf(type));\n\n    player.current.playChord(pitches);\n  }\n\n  const renderButtons = (type) => {\n    return NOTES.map(note => (\n      <button key={note + type} onClick={() => playChord(note, type)}>{note}{type}</button>\n    ));\n  }\n\n  const positions = getChordPositions(lastChordNote, lastChordType) ?? [];\n\n  const onChordClick = (positions: number[]) => {\n    const pitches = positionsToPitches(positions);\n    player.current.playChord(pitches);\n    localStorage.setItem(storageKey, JSON.stringify(positions));\n    render(Date.now()); // needed for the checkbox above chord icons\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLDivElement> = (e) => {\n    const noteKeymap = ['z', 's', 'x', 'd', 'c', 'v', 'g', 'b', 'h', 'n', 'j', 'm', ','];\n    console.log(e.key);\n    if (noteKeymap.includes(e.key)) {\n      return playChord(NOTES[noteKeymap.indexOf(e.key) % 12], CHORDTYPES[lastChordType]);\n    }\n\n    const typeKeymap = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    if (typeKeymap.includes(e.key)) {\n      return setLastChordType(typeKeymap.indexOf(e.key));\n    }\n  };\n\n  const renderChord = (pos: [number, number, number]) => {\n    const key = JSON.stringify(pos);\n    const isChecked = key === localStorage.getItem(storageKey);\n\n    return (\n      <ChordView\n        key={key}\n        positions={pos}\n        onClick={onChordClick}\n        isChecked={isChecked}\n      />\n    );\n  };\n\n  const updateTuning = (freq: number) => {\n    setTuning(freq);\n    player.current.setFreq(freq);\n  };\n\n  return (\n    <div className={styles.app} onKeyDown={onKeyDown} tabIndex={0}>\n      <input className={styles.tuner} type=\"range\" step=\"0.1\" min=\"400\" max=\"500\" value={tuning} onChange={(e) => updateTuning(Number(e.target.value))} />\n      <br />\n      {tuning.toFixed(1)}\n      <br />\n      {CHORDTYPES.map(type => <>{renderButtons(type)}<br/></>)}\n      {/* <Player ref={player}/> */}\n      <div className={styles.chords}>\n        {positions.map(pos => renderChord(pos))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"chords\":\"App_chords__7aOCV\",\"tuner\":\"App_tuner__1cFdW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordview\":\"ChordView_chordview__1UQS7\"};"],"sourceRoot":""}