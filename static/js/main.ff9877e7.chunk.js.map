{"version":3,"sources":["ChordButtons.module.scss","AudioFontPlayer.ts","chords.ts","ChordButtons.tsx","ChordView.tsx","useDebounce.ts","Sliders.tsx","App.tsx","reportWebVitals.ts","index.tsx","ChordView.module.scss","Sliders.module.scss","App.module.scss"],"names":["module","exports","soundFont","window","_tone_0411_FluidR3_GM_sf2_file","AudioFontPlayer","constructor","player","audioContext","envelopes","volume","playbackRate","AudioContextFunc","AudioContext","webkitAudioContext","this","WebAudioFontPlayer","loader","decodeAfterLoading","console","log","queueNote","note","duration","zone","findZone","baseDetune","originalPitch","coarseTune","fineTune","Math","pow","envelope","queueWaveTable","destination","audioBufferSourceNode","cancelScheduledValues","setValueAtTime","push","playChord","pitches","stop","forEach","pitch","pop","cancel","length","setFreq","freq","map","e","setVolume","NOTES","NOTES_CHROMATIC_ORDER","NOTES_FIFTHS_ORDER","CHORDTYPES","TUNING","CHORD_DB","createNotesArr","notes","arr","n","sort","a","b","threeNoteChordItem","base","type","fourNoteChordItem","fourth","i","createDb","getChords","p","filter","item","isEqual","r","getDifficulty","reduce","prev","curr","VALID_CHORDS","positionsToPitches","positions","t","getAlternativeNames","c","j","k","chord","Array","isArray","init","CHROMATIC_KEYMAP","FIFTHS_KEYMAP","ChordButtons","props","activeNote","activeType","onClick","onStop","layout","setLayout","useState","keymap","className","styles","chordbuttons","key","_","typeIndex","order","noteIndex","active","renderButtons","colSpan","name","value","checked","onChange","target","ChordView","isChecked","getNote","baseNote","pos","index","wrapper","chordview","readOnly","fill","names","Fragment","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Sliders","onSetVolume","onSetTuning","debouncedVolume","tuning","setTuning","debouncedTuning","sliders","tuner","step","min","max","Number","App","useRef","ready","setReady","current","lastChordNote","setLastChordNote","lastChordType","setLastChordType","render","getStorageKey","storageKey","getPitches","useCallback","stored","localStorage","getItem","parsed","JSON","parse","every","isInteger","err","getChordPitches","indexOf","onChordClick","setItem","stringify","Date","now","app","onKeyDown","noteKeymap","includes","typeKeymap","tabIndex","chords","renderChord","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff9877e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordbuttons\":\"ChordButtons_chordbuttons__1fCK-\",\"active\":\"ChordButtons_active__1aWxQ\",\"stop\":\"ChordButtons_stop__3dkpU\"};","import WebAudioFontPlayer from 'webaudiofont';\n\nconst soundFont = (window as any)._tone_0411_FluidR3_GM_sf2_file\n\nexport class AudioFontPlayer {\n  private player;\n  private audioContext;\n  private envelopes = [];\n  private volume = 0.5;\n  private playbackRate = 1.0;\n\n  constructor () {\n    const AudioContextFunc = window.AudioContext || (window as any).webkitAudioContext;\n    this.audioContext = new AudioContextFunc();\n    this.player = new WebAudioFontPlayer();\n    this.player.loader.decodeAfterLoading(this.audioContext, '_tone_0411_FluidR3_GM_sf2_file');\n    // sustain\n    // for (let i = 0; i < soundFont.zones.length; i++){\n    //   soundFont.zones[i].ahdsr = false;\n    // }\n    console.log(this.player, soundFont);\n  }\n\n  queueNote(note: number, duration: number) {\n    const zone = this.player.findZone(this.audioContext, soundFont, note);\n    const baseDetune = zone.originalPitch - 100.0 * zone.coarseTune - zone.fineTune;\n\t\tconst playbackRate = this.playbackRate * Math.pow(2, (100.0 * note - baseDetune) / 1200.0);\n    const envelope = this.player.queueWaveTable(this.audioContext, this.audioContext.destination, soundFont, 0, note, duration, this.volume);\n    console.log('i', note, playbackRate);\n    envelope.audioBufferSourceNode.playbackRate.cancelScheduledValues(0);\n    envelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, 0);\n    this.envelopes.push(envelope);\n  }\n\n  playChord(pitches: number[]) {\n    this.stop();\n    pitches.forEach(pitch => this.queueNote(pitch, 999));\n  }\n\n  stop() {\n    while (true) {\n      const envelope = this.envelopes.pop();\n      if (!envelope) break;\n      envelope.cancel();\n    }\n  }\n\n  get playing() {\n    return this.envelopes.length > 0;\n  }\n\n  setFreq(freq: number) {\n    this.playbackRate = freq / 440;\n    const pitches = this.envelopes.map(e => e.pitch);\n    this.playChord(pitches);\n  }\n\n  setVolume(volume: number) {\n    this.volume = volume;\n    // it doesn't accept 0\n    if (this.volume === 0) {\n      this.volume = 0.0001;\n    }\n    const pitches = this.envelopes.map(e => e.pitch);\n    this.playChord(pitches);\n  }\n}\n","import { isEqual } from 'lodash';\n\nexport const NOTES = ['C', 'C♯', 'D', 'E♭', 'E', 'F', 'F♯', 'G', 'A♭', 'A', 'B', 'H'];\nexport const NOTES_CHROMATIC_ORDER = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nexport const NOTES_FIFTHS_ORDER = [6, 1, 8, 3, 10, 5, 0, 7, 2, 9, 4, 11];\nexport const CHORDTYPES = ['', 'm', '7', 'dim', '5', '6', 'm7', 'maj7', 'sus2', 'sus4', 'm6', 'aug'];\n\nconst TUNING = [55, 62, 57];\nconst MAX_POS = 8;\n\nconst CHORD_DB = [];\n\nconst createNotesArr = (notes: number[]) => {\n  const arr = notes.map(n => n % 12);\n  arr.sort((a, b) => a - b);\n  return arr;\n};\n\nconst threeNoteChordItem = (base: number, type: number, notes: number[]) => {\n  return { base, type, notes: createNotesArr(notes) };\n}\n\nconst fourNoteChordItem = (base: number, type: number, notes: number[], fourth: number) => {\n  return [\n    threeNoteChordItem(base, type, [notes[0], notes[1], fourth]),\n    threeNoteChordItem(base, type, [notes[0], fourth, notes[2]]),\n    threeNoteChordItem(base, type, [fourth, notes[1], notes[2]]),\n  ];\n}\n\nconst createDb = () => {\n  for (let i = 0; i < 12; i++) {\n    CHORD_DB.push(\n      threeNoteChordItem(i, 0, [i, i + 4, i + 4 + 3]), // major\n      threeNoteChordItem(i, 1, [i, i + 3, i + 3 + 4]), // minor\n      ...fourNoteChordItem(i, 2, [i, i + 4, i + 4 + 3], i + 4 + 3 + 3), // 7\n      threeNoteChordItem(i, 3, [i, i + 3, i + 6]), // dim\n      threeNoteChordItem(i, 4, [i, i, i + 3 + 4]), // 5\n      threeNoteChordItem(i, 4, [i, i + 3 + 4, i + 3 + 4]), // 5\n      ...fourNoteChordItem(i, 5, [i, i + 4, i + 4 + 3], i + 4 + 3 + 2), // 6\n      ...fourNoteChordItem(i, 6, [i, i + 3, i + 3 + 4], i + 4 + 3 + 3), // m7\n      ...fourNoteChordItem(i, 7, [i, i + 4, i + 4 + 3], i + 4 + 3 + 4), // maj7\n      threeNoteChordItem(i, 8, [i, i + 2, i + 4 + 3]), // sus2\n      threeNoteChordItem(i, 9, [i, i + 5, i + 4 + 3]), // sus4\n      ...fourNoteChordItem(i, 10, [i, i + 3, i + 3 + 4], i + 4 + 3 + 2), // m6\n      threeNoteChordItem(i, 11, [i, i + 4, i + 4 + 4]), // aug\n    );\n  }\n};\ncreateDb();\nconsole.log(CHORD_DB);\n\n// note is zero indexed\nconst pitchToNote = (pitch: number) => {\n  return pitch % 12;\n}\n\nconst getChords = (pitches: number[]) => {\n  const notes = pitches.map(p => pitchToNote(p)).sort((a, b) => a - b);\n  const res = CHORD_DB.filter(item => isEqual(item.notes, notes));\n  return res.map(r => ({ base: r.base, type: r.type }));\n};\n\nconst getDifficulty = (pitches: number[]) => {\n  const positions = pitches.map((pitch, i) => pitch - TUNING[i]);\n  const score = positions.reduce((prev, curr) => curr === 0 ? prev + 2 : prev + curr, 0);\n  return score;\n};\n\n// VALID_CHORDS[note][type] = [pitches];\nconst VALID_CHORDS = [];\n\nfunction init() {\n  for (let i = 0; i < MAX_POS; i++) {\n    for (let j = 0; j < MAX_POS; j++) {\n      for (let k = 0; k < MAX_POS; k++) {\n        const pitches = [TUNING[0] + i, TUNING[1] + j, TUNING[2] + k];\n        const chords = getChords(pitches);\n        chords.forEach(chord => {\n          if (!Array.isArray(VALID_CHORDS[chord.base])) {\n            VALID_CHORDS[chord.base] = [];\n          }\n          if (!Array.isArray(VALID_CHORDS[chord.base][chord.type])) {\n            VALID_CHORDS[chord.base][chord.type] = [];\n          }\n          VALID_CHORDS[chord.base][chord.type].push(pitches);\n        });\n      }\n    }\n  }\n\n  // order by complexity\n  for (let i = 0; i < VALID_CHORDS.length; i++) {\n    for (let j = 0; j < VALID_CHORDS[i].length; j++) {\n      const pitches = VALID_CHORDS[i][j];\n      pitches.sort((a, b) => getDifficulty(a) - getDifficulty(b));\n    }\n  }\n}\n\ninit();\n\nexport function getChordPitches(note: number, type: number) {\n  return VALID_CHORDS[note][type];\n}\n\nexport function getChordPositions(note: number, type: number) {\n  return VALID_CHORDS[note][type].map(pitches => pitches.map((pitch, i) => pitch - TUNING[i]));\n}\n\nexport function positionsToPitches(positions: number[]) {\n  return TUNING.map((t, i) => positions[i] + t);\n}\n\nexport function getAlternativeNames(positions: number[]) {\n  const pitches = positions.map((p, i) => TUNING[i] + p);\n  const chords = getChords(pitches).sort((a, b) => a.type - b.type);\n  return chords.map(c => `${NOTES[c.base]}${CHORDTYPES[c.type]}`);\n}\n\nconsole.log('VALID_CHORDS', VALID_CHORDS);\n","import React, { useState } from 'react';\nimport { CHORDTYPES, NOTES, NOTES_CHROMATIC_ORDER, NOTES_FIFTHS_ORDER } from './chords';\nimport styles from './ChordButtons.module.scss';\n\ninterface ChordButtonsProps {\n  activeNote: number;\n  activeType: number;\n  onClick: (note: number, type: number) => void;\n  onStop: () => void;\n}\n\nexport const CHROMATIC_KEYMAP = ['z', 's', 'x', 'd', 'c', 'v', 'g', 'b', 'h', 'n', 'j', 'm'];\nexport const FIFTHS_KEYMAP = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']'];\n\nexport const ChordButtons: React.FC<ChordButtonsProps> = (props) => {\n  const { activeNote, activeType, onClick, onStop } = props;\n  const [layout, setLayout] = useState('chromatic');\n\n  const renderButtons = (typeIndex: number) => {\n    const order = layout === 'chromatic' ? NOTES_CHROMATIC_ORDER : NOTES_FIFTHS_ORDER;\n\n    return (\n      <tr key={typeIndex}>\n        <td>{typeIndex < 9 ? typeIndex + 1 : ''}</td>\n        {order.map((noteIndex) => (\n          <td key={noteIndex + typeIndex}>\n            <button\n              className={activeType === typeIndex && activeNote === noteIndex ? styles.active : ' '}\n              onClick={() => onClick(noteIndex, typeIndex)}\n            >\n              {NOTES[noteIndex]}{CHORDTYPES[typeIndex]}\n            </button>\n          </td>\n        ))}\n      </tr>\n    );\n  }\n\n  const keymap = layout === 'chromatic' ? CHROMATIC_KEYMAP : FIFTHS_KEYMAP;\n  return (\n    <div className={styles.chordbuttons}>\n      <table>\n        <thead>\n          <tr>\n            <td><strong>Key</strong></td>\n            {keymap.map(key => <td key={key}>{key}</td>)}\n          </tr>\n        </thead>\n        <tbody>\n          {CHORDTYPES.map((_, typeIndex) => renderButtons(typeIndex))}\n          <tr>\n            <td>Space</td>\n            <td colSpan={12}>\n              <button className={styles.stop} onClick={onStop}>Stop</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"layout\"\n          value=\"chromatic\"\n          checked={layout === 'chromatic'}\n          onChange={(e) => setLayout(e.target.value)}\n        />\n        Chromatic\n      </label>\n      &nbsp;&nbsp;&nbsp;&nbsp;\n      <label>\n        <input\n          type=\"radio\"\n          name=\"layout\"\n          value=\"fifths\"\n          checked={layout === 'fifths'}\n          onChange={(e) => setLayout(e.target.value)}\n        />\n        Circle of fifths\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport { getAlternativeNames, NOTES } from './chords';\nimport styles from './ChordView.module.scss';\n\ninterface ChordViewProps {\n  isChecked: boolean;\n  positions: [number, number, number];\n  onClick: (positions: number[]) => void;\n}\n\nexport const ChordView: React.FC<ChordViewProps> = (props) => {\n  const { isChecked, positions, onClick } = props;\n\n  const getNote = (baseNote: number, pos: number) => {\n    const index = (baseNote + pos) % 12;\n    const isHighNote = baseNote + pos >= 7 + 12;\n    return isHighNote ? `${NOTES[index]}'` : NOTES[index];\n  }\n\n  return (\n    <div className={styles.wrapper} onClick={() => onClick(positions)}>\n      <table className={styles.chordview}>\n        <thead>\n          <tr>\n            <th colSpan={3}>\n              <input type=\"checkbox\" checked={isChecked} readOnly/>\n            </th>\n          </tr>\n          <tr>\n            <th>{getNote(7, positions[0])}</th>\n            <th>{getNote(14, positions[1])}</th>\n            <th>{getNote(9, positions[2])}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {new Array(7).fill(0).map((_, i) => (\n            <tr key={i}>\n              <td>{positions[0] === i + 1 ? '●' : ''}</td>\n              <td>{positions[1] === i + 1 ? '●' : ''}</td>\n              <td>{positions[2] === i + 1 ? '●' : ''}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className={styles.names}>\n        {getAlternativeNames(positions).map(name =>\n          <React.Fragment key={name}>\n            {name}\n            <br />\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n};\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n","import React, { useEffect, useState } from 'react';\nimport styles from './Sliders.module.scss';\nimport { useDebounce } from './useDebounce';\n\ninterface SlidersProps {\n  onSetVolume: (volume: number) => void;\n  onSetTuning: (tuning: number) => void;\n}\n\nexport const Sliders: React.FC<SlidersProps> = (props) => {\n  const { onSetVolume, onSetTuning } = props;\n  const [volume, setVolume] = useState(0.5);\n  const debouncedVolume = useDebounce(volume, 50);\n  const [tuning, setTuning] = useState(440);\n  const debouncedTuning = useDebounce(tuning, 25);\n\n  useEffect(() => {\n    onSetVolume(debouncedVolume);\n  }, [onSetVolume, debouncedVolume]);\n\n  useEffect(() => {\n    onSetTuning(debouncedTuning);\n  }, [onSetTuning, debouncedTuning]);\n\n  return (\n    <div className={styles.sliders}>\n      <label>\n        Tuning\n        <br />\n        <input\n          className={styles.tuner}\n          type=\"range\"\n          step=\"0.1\"\n          min=\"400\"\n          max=\"500\"\n          value={tuning}\n          onChange={(e) => setTuning(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Volume\n        <br />\n        <input\n          className={styles.tuner}\n          type=\"range\"\n          step=\"0.02\"\n          min=\"0\"\n          max=\"1\"\n          value={volume}\n          onChange={(e) => setVolume(Number(e.target.value))}\n        />\n      </label>\n      {/* <br />\n      {tuning.toFixed(1)}\n      <br /> */}\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styles from './App.module.scss';\nimport { AudioFontPlayer } from './AudioFontPlayer';\nimport { ChordButtons } from './ChordButtons';\nimport { CHORDTYPES, getChordPitches, getChordPositions, NOTES, positionsToPitches } from './chords';\nimport { ChordView } from './ChordView';\nimport { Sliders } from './Sliders';\n\nexport const App: React.FC = () => {\n  const player = useRef(null);\n  const [ready, setReady] = useState(false);\n\n  useEffect(() => {\n    player.current = new AudioFontPlayer();\n    setReady(true);\n  }, []);\n\n  const [lastChordNote, setLastChordNote] = useState(0);\n  const [lastChordType, setLastChordType] = useState(0);\n  const [, render] = useState(0);\n\n  const getStorageKey = (note: string, type: string) => `viola-${note}${type}`;\n  const storageKey = getStorageKey(NOTES[lastChordNote], CHORDTYPES[lastChordType]);\n\n  const getPitches = useCallback((note: string, type: string) => {\n    const storageKey = getStorageKey(note, type);\n    const stored = localStorage.getItem(storageKey);\n    if (stored) {\n      try {\n        const parsed = JSON.parse(stored);\n        if (Array.isArray(parsed) && parsed.length === 3 && parsed.every(p => Number.isInteger(p))) {\n          console.log(parsed, positionsToPitches(parsed));\n          return positionsToPitches(parsed);\n        }\n      } catch (err) {}\n    }\n\n    return getChordPitches(\n      NOTES.indexOf(note),\n      CHORDTYPES.indexOf(type)\n    )[0];\n  }, []);\n\n  const playChord = useCallback((note: number, type: number) => {\n    const pitches = getPitches(NOTES[note], CHORDTYPES[type]);\n\n    setLastChordNote(note);\n    setLastChordType(type);\n\n    player.current.playChord(pitches);\n  }, [getPitches])\n\n  const positions = getChordPositions(lastChordNote, lastChordType) ?? [];\n\n  const onChordClick = (positions: number[]) => {\n    const pitches = positionsToPitches(positions);\n    player.current.playChord(pitches);\n    localStorage.setItem(storageKey, JSON.stringify(positions));\n    render(Date.now()); // needed for the checkbox above chord icons\n  };\n\n  const onStop = () => {\n    player.current.stop();\n  };\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLDivElement> = (e) => {\n    const noteKeymap = ['z', 's', 'x', 'd', 'c', 'v', 'g', 'b', 'h', 'n', 'j', 'm', ','];\n    console.log(e.key);\n    if (noteKeymap.includes(e.key)) {\n      return playChord(noteKeymap.indexOf(e.key) % 12, lastChordType);\n    }\n\n    const typeKeymap = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    if (typeKeymap.includes(e.key)) {\n      return setLastChordType(typeKeymap.indexOf(e.key));\n    }\n\n    if (e.key === ' ') {\n      return onStop();\n    }\n  };\n\n  const renderChord = (pos: [number, number, number]) => {\n    const key = JSON.stringify(pos);\n    const isChecked = key === localStorage.getItem(storageKey);\n\n    return (\n      <ChordView\n        key={key}\n        positions={pos}\n        onClick={onChordClick}\n        isChecked={isChecked}\n      />\n    );\n  };\n\n  const onSetTuning = useCallback((freq: number) => {\n    player.current.setFreq(freq);\n  }, []);\n\n  const onSetVolume = useCallback((volume: number) => {\n    player.current.setVolume(volume);\n  }, []);\n\n  if (!ready) {\n    return null;\n  }\n\n  return (\n    <div className={styles.app} onKeyDown={onKeyDown} tabIndex={0}>\n      \n      <ChordButtons activeNote={lastChordNote} activeType={lastChordType} onClick={playChord} onStop={onStop} />\n      <Sliders onSetTuning={onSetTuning} onSetVolume={onSetVolume} />\n      \n      <div className={styles.chords}>\n        {positions.map(pos => renderChord(pos))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordview\":\"ChordView_chordview__1UQS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliders\":\"Sliders_sliders__lzxZi\",\"tuner\":\"Sliders_tuner__vf4HX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"chords\":\"App_chords__7aOCV\"};"],"sourceRoot":""}